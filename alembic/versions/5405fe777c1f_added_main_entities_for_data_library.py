"""added main entities for data library

Revision ID: 5405fe777c1f
Revises: 6353a7ed8fc1
Create Date: 2021-03-02 23:31:11.517817

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5405fe777c1f'
down_revision = '6353a7ed8fc1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feature',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feature')),
    sa.UniqueConstraint('name', name=op.f('uq_feature_name'))
    )
    op.create_index(op.f('ix_feature_id'), 'feature', ['id'], unique=False)
    op.create_table('formation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('group', 'subgroup', 'set', name='formationtype'), nullable=False),
    sa.Column('parent_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['formation.id'], name=op.f('fk_formation_parent_id_formation')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_formation')),
    sa.UniqueConstraint('name', name=op.f('uq_formation_name'))
    )
    op.create_index(op.f('ix_formation_id'), 'formation', ['id'], unique=False)
    op.create_table('feature_formation_association',
    sa.Column('feature_id', postgresql.UUID(), nullable=True),
    sa.Column('formation_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.id'], name=op.f('fk_feature_formation_association_feature_id_feature')),
    sa.ForeignKeyConstraint(['formation_id'], ['formation.id'], name=op.f('fk_feature_formation_association_formation_id_formation'))
    )
    op.create_table('function_feature_association',
    sa.Column('base_function_id', postgresql.UUID(), nullable=True),
    sa.Column('feature_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['base_function_id'], ['base_function.id'], name=op.f('fk_function_feature_association_base_function_id_base_function')),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.id'], name=op.f('fk_function_feature_association_feature_id_feature'))
    )
    op.alter_column('base_function', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_unique_constraint(op.f('uq_base_function_name'), 'base_function', ['name'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_base_function_name'), 'base_function', type_='unique')
    op.alter_column('base_function', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_table('function_feature_association')
    op.drop_table('feature_formation_association')
    op.drop_index(op.f('ix_formation_id'), table_name='formation')
    op.drop_table('formation')
    op.drop_index(op.f('ix_feature_id'), table_name='feature')
    op.drop_table('feature')
    # ### end Alembic commands ###
